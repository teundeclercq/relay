name: Build and Release tunnel

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build:
    name: Build and Release binaries
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, windows, darwin]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64 # skip unsupported combo

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.24'
          cache: true

      - name: Build binary
        run: |
          echo "Building for ${{ matrix.os }}-${{ matrix.goarch }}"
          mmkdir -p dist    
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/tunnel-server-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/server
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o dist/tunnel-client-${{ matrix.goos }}-${{ matrix.goarch }} ./cmd/client

      - name: Upload server artifact
        uses: actions/upload-artifact@v3
        with:
          name: tunnel-server-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/tunnel-server-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload client artifact
        uses: actions/upload-artifact@v3
        with:
          name: tunnel-client-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/tunnel-client-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3

      - name: Create release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          files: |
            tunnel-*/tunnel-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}